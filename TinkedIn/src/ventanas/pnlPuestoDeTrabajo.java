package ventanas;
import java.awt.Dimension;
import java.awt.FlowLayout;

import javax.swing.*;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

import clases.Habilidad;
import clases.PuestoTrabajo;
import componentes.SquareLabel;
import componentes.botonAceptar;
import componentes.botonAnEl;
import servidor.ServicioPersistencia;
import usuarios.Empresa;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.TextArea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.TreeMap;
import java.awt.BorderLayout;
import java.awt.Component;

public class pnlPuestoDeTrabajo extends JPanel {
	private JTree ArbolHabilidades;
	private JPanel pnlArbol;
	private TreeMap<String, ArrayList<String>> areasDeTrabajo;
	private DefaultTreeModel modeloArbol;
	private DefaultMutableTreeNode root;
	private DefaultListModel<Habilidad> modeloLista;
	private DefaultListModel<PuestoTrabajo> modeloListaPt;
	private JTextField tfNombrePuesto;
	protected ServicioPersistencia servicio;
	protected Empresa usuarioAu;
	
	private String areaHabilidad;
	
	public pnlPuestoDeTrabajo( PnlExplorarEmpresa pnlExplorarEmpresa) {

		if(PnlBotonera.usuarioAutenticado instanceof Empresa) {
			usuarioAu = (Empresa) (PnlBotonera.usuarioAutenticado);
		}
		
		setSize(750,650);
		setLayout( new BorderLayout());
		
		servicio = VentanaPrincipal.servicio;
		
		areasDeTrabajo = new TreeMap<>();
		
		JPanel pnlTitulo = new JPanel();
		pnlTitulo.setBackground( Color.WHITE );
		pnlTitulo.setPreferredSize( new Dimension(getWidth(), 50));
		
		JLabel lblTit = new JLabel("CREAR PUESTOS DE TRABAJO");
		lblTit.setFont(new Font("Segoe UI Black", Font.BOLD, 18));
		pnlTitulo.add(lblTit);
		
		JPanel pnlCreador = new JPanel();
		pnlCreador.setBackground( Color.GREEN);
		pnlCreador.setLayout( new BorderLayout() );
		
		JPanel pnlArbolyLista = new JPanel();
		pnlArbolyLista.setLayout( new BorderLayout() );
		pnlArbolyLista.setPreferredSize( new Dimension( getWidth()/2, pnlCreador.getHeight()));
		pnlArbolyLista.setBackground( Color.WHITE );
		
		JPanel pnlEditHab = new JPanel();
		pnlEditHab.setLayout( new BorderLayout() );
		pnlEditHab.setPreferredSize( new Dimension( getWidth()/2, pnlCreador.getHeight()));
		
		JPanel pnlEditCampos = new JPanel();
		pnlEditCampos.setLayout(  new BoxLayout(  pnlEditCampos ,BoxLayout.Y_AXIS) );
		pnlEditCampos.setBackground( Color.WHITE );
		pnlEditCampos.setPreferredSize( new Dimension( getWidth()/2, getHeight()/3-pnlTitulo.getHeight()));
		
		JPanel pnlPreviewHab = new JPanel();
		pnlPreviewHab.setLayout( new BoxLayout(pnlPreviewHab, BoxLayout.Y_AXIS) );
		pnlPreviewHab.setPreferredSize( new Dimension(  getWidth()/2, getHeight()/3-pnlTitulo.getHeight() ) );
		pnlPreviewHab.setBackground( Color.GREEN );
		
		JPanel pnlTituloPreview = new JPanel();
		pnlTituloPreview.setBackground(new Color(255, 255, 255));
		pnlTituloPreview.setPreferredSize( new Dimension(getWidth()/2, 30));
		pnlTituloPreview.setBorder( BorderFactory.createLineBorder(Color.BLACK) );
		JLabel lblTituloPreview = new JLabel( "DATOS PUESTOS DE TRABAJO" );
		lblTituloPreview.setFont(new Font("Segoe UI Black", Font.BOLD, 14));
		pnlTituloPreview.add(lblTituloPreview);
		
		pnlPreviewHab.add(pnlTituloPreview);
		SpinnerNumberModel modelSp = new SpinnerNumberModel(0, 0, 5, 1);
		
		pnlEditHab.setBackground( Color.BLUE );
		
		JPanel pnlLista = new JPanel();
		pnlLista.setBackground( Color.WHITE );
		pnlLista.setPreferredSize( new Dimension(getWidth()/4, pnlCreador.getHeight()) );
		
		pnlArbol = new JPanel();
		pnlArbol.setBackground( Color.BLUE);
		pnlArbol.setPreferredSize( new Dimension( getWidth()/4, pnlCreador.getHeight() ));
		
		JPanel pnlBotoneraIzq = new JPanel();
	 	pnlBotoneraIzq.setBorder( BorderFactory.createBevelBorder(0));
	 	pnlBotoneraIzq.setLayout( new FlowLayout() );
	    pnlBotoneraIzq.setPreferredSize( new Dimension( getWidth()/4, 50));
	    botonAnEl btnEliminarHab = new botonAnEl("Eliminar");
	    pnlBotoneraIzq.add( btnEliminarHab );
	    
	    JList<Habilidad> listaHab = new JList<Habilidad>();
	    listaHab.setBackground(new Color(255, 255, 255));
	    listaHab.setForeground(new Color(0, 0, 0));
		modeloLista = new DefaultListModel<Habilidad>();
		listaHab.setModel(modeloLista);
		
		JPanel pnlLblHabilidad = new JPanel();
		pnlLblHabilidad.setPreferredSize(new Dimension(375, 30));
		pnlLblHabilidad.setBorder(BorderFactory.createLineBorder(Color.BLACK));
		pnlLblHabilidad.setBackground(Color.WHITE);
		pnlLista.add(pnlLblHabilidad);
		
		JLabel lblHabilidades = new JLabel("HABILIDADES");
		lblHabilidades.setFont(new Font("Segoe UI Black", Font.BOLD, 14));
		pnlLblHabilidad.add(lblHabilidades);
		pnlEditHab.add(pnlEditCampos, BorderLayout.NORTH);
		pnlEditHab.add( pnlPreviewHab);
		
		JScrollPane spLista = new JScrollPane(listaHab);
		spLista.setPreferredSize( new Dimension(187, 450));
		pnlLista.add(spLista);
		
		add(pnlTitulo, BorderLayout.NORTH);
		add(pnlCreador);
		pnlCreador.add( pnlArbolyLista, BorderLayout.WEST );
		pnlCreador.add( pnlEditHab, BorderLayout.EAST );
		pnlArbolyLista.add(pnlLista, BorderLayout.EAST);
		pnlArbolyLista.add( pnlArbol, BorderLayout.WEST );
		pnlLista.add(pnlBotoneraIzq, BorderLayout.SOUTH);
		

		
		JPanel pnlDescrHab_1_1 = new JPanel();
		pnlDescrHab_1_1.setBorder(BorderFactory.createLineBorder( Color.BLACK));
		pnlDescrHab_1_1.setBackground(Color.WHITE);
		pnlPreviewHab.add(pnlDescrHab_1_1);
		pnlDescrHab_1_1.setLayout(new FlowLayout());
		
		JLabel lblNombrePuesto = new JLabel("Nombre:");
		pnlDescrHab_1_1.add(lblNombrePuesto);
		
		JTextArea taNombrePuesto = new JTextArea();
		taNombrePuesto.setPreferredSize(new Dimension(200, 100));
		JScrollPane spNombrePuesto = new JScrollPane(taNombrePuesto);
		pnlDescrHab_1_1.add(spNombrePuesto);
		
		JPanel pnlDescrHab_1 = new JPanel();
		pnlDescrHab_1.setBorder(BorderFactory.createLineBorder( Color.BLACK));
		pnlDescrHab_1.setBackground(Color.WHITE);
		pnlPreviewHab.add(pnlDescrHab_1);
		pnlDescrHab_1.setLayout(new FlowLayout());
		
		JLabel lblDescrPuesto = new JLabel("Descripcion: ");
		pnlDescrHab_1.add(lblDescrPuesto);
		
		JTextArea taDescrPuesto = new JTextArea();
		taDescrPuesto.setPreferredSize(new Dimension(200, 100));
		JScrollPane spDescrPuesto = new JScrollPane(taDescrPuesto);
		pnlDescrHab_1.add(spDescrPuesto);
		
		JPanel pnlBtnConfirm = new JPanel();
		pnlBtnConfirm.setBackground(Color.WHITE);
		pnlPreviewHab.add(pnlBtnConfirm);
		
		botonAceptar btnConfirm = new botonAceptar("Confirmar");
		pnlBtnConfirm.add(btnConfirm);
		
		JPanel pnlDatosHabilidad = new JPanel();
		pnlDatosHabilidad.setPreferredSize(new Dimension(375, 30));
		pnlDatosHabilidad.setBorder(BorderFactory.createLineBorder(Color.BLACK));
		pnlDatosHabilidad.setBackground(Color.WHITE);
		pnlEditCampos.add(pnlDatosHabilidad);
		
		JLabel lblDatosHab = new JLabel("DATOS HABILIDAD");
		lblDatosHab.setFont(new Font("Segoe UI Black", Font.BOLD, 14));
		pnlDatosHabilidad.add(lblDatosHab);
		
		JPanel pnlSpinner = new JPanel();
		pnlSpinner.setBorder(BorderFactory.createLineBorder( Color.BLACK ));
		pnlSpinner.setBackground(Color.WHITE);
		pnlEditCampos.add(pnlSpinner);
		pnlSpinner.setLayout(new FlowLayout());
		
		JLabel lblDestreza = new JLabel("Destreza: ");
		pnlSpinner.add(lblDestreza);
		
		JSpinner spDestreza = new JSpinner(new SpinnerNumberModel(0, 0, 5, 1));
		pnlSpinner.add(spDestreza);
		
		JPanel pnlDescrHab = new JPanel();
		pnlDescrHab.setBorder(BorderFactory.createLineBorder( Color.BLACK));
		pnlDescrHab.setBackground(Color.WHITE);
		pnlEditCampos.add(pnlDescrHab);
		pnlDescrHab.setLayout(new FlowLayout());
		
		JLabel lblDescrHab = new JLabel("Descripcion: ");
		pnlDescrHab.add(lblDescrHab);
		
		TextArea taDescrHab = new TextArea();
		taDescrHab.setPreferredSize(new Dimension(150, 80));
		JScrollPane spDescrHab = new JScrollPane(taDescrHab);
		pnlDescrHab.add(spDescrHab);
		
		JPanel pnlBotonAc = new JPanel();
		pnlBotonAc.setPreferredSize(new Dimension(375, 35));
		pnlBotonAc.setBackground(Color.WHITE);
		pnlEditCampos.add(pnlBotonAc);
		pnlBotonAc.setLayout(new FlowLayout());
		
		botonAceptar btnAc = new botonAceptar("Aceptar");
		pnlBotonAc.add(btnAc);
		
//		btnAÃ±adirHab.addActionListener( (ActionListener) new ActionListener() {
//
//			@Override
//			public void actionPerformed(ActionEvent e) {
//				// TODO Auto-generated method stub
//				Habilidad h = new Habilidad(areaHabilidad, lblNombrePrev.getText(), (int)spDestreza.getValue(), taDescrHab.getText() );
//				modeloLista.addElement(h);
//				listaHab.repaint();
//			}
//			
//		});
		
		btnConfirm.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				ArrayList<Habilidad> habilidades = new ArrayList<>();
				for (int i = 0; i < modeloLista.size(); i++) {
				    habilidades.add(modeloLista.getElementAt(i));
				}
				PuestoTrabajo puesto = new PuestoTrabajo(taNombrePuesto.getText(), taDescrPuesto.getText(), habilidades, PnlBotonera.usuarioAutenticado.getId());
				servicio.anadirPuesto(puesto);
				pnlExplorarEmpresa.anadirPuesto(puesto);
				PnlMiPerfil.anadirPuestoLista(puesto);
			}
		});
			
		btnEliminarHab.addActionListener( (ActionListener) new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				int indiceElegido = listaHab.getSelectedIndex();
				if (indiceElegido != -1) {
					modeloLista.removeElementAt(indiceElegido);
					listaHab.repaint();
				}
			}});
		
		btnAc.addActionListener((ActionListener) new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				TreePath path = ArbolHabilidades.getSelectionPath();
				if (path != null) {
					DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();
					DefaultMutableTreeNode fieldNode = (DefaultMutableTreeNode) selectedNode.getParent();
					String campo = (String) fieldNode.getUserObject();
					String nombre = (String) selectedNode.getUserObject();
					Habilidad habilidad = new Habilidad(campo, nombre, (int) spDestreza.getValue(), taDescrHab.getText());
					modeloLista.addElement(habilidad);
					listaHab.repaint();
				}

			}
		});
        
		this.crearMapaAreas();
		this.crearArbol(areasDeTrabajo);
		
		ArbolHabilidades.addTreeSelectionListener( (TreeSelectionListener) new TreeSelectionListener() {

			@Override
			public void valueChanged(TreeSelectionEvent e) {
				// TODO Auto-generated method stub
				TreePath ruta = ArbolHabilidades.getSelectionPath();
				if (ruta.getPathCount() == 2) { 
			        Object selectedNode = ArbolHabilidades.getLastSelectedPathComponent();
			        if (selectedNode instanceof DefaultMutableTreeNode) {
			            DefaultMutableTreeNode node = (DefaultMutableTreeNode) selectedNode;
			            Object area = node.getUserObject(); // Obtenemos el objeto asociado al nodo
			            if (area != null && area instanceof String) {
			               areaHabilidad = ( ( String ) area );
			            }
			        }
				}else if( ruta.getPathCount() == 3) {
			    	Object selectedNode = ArbolHabilidades.getLastSelectedPathComponent();
			    	if( selectedNode instanceof DefaultMutableTreeNode ) {
			    		DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) selectedNode;
			    		DefaultMutableTreeNode padre = (DefaultMutableTreeNode) node.getParent();
			    		if((String) padre.getUserObject() != areaHabilidad) {
			    			areaHabilidad = "";
			    		}else {
			    		Object habilidad = node.getUserObject();
			    		if ( habilidad != null && habilidad instanceof String ) {
			    		}}
			    	}
			    }
			}});
		
		
		
	}
	
	
	public void crearArbol(TreeMap<String,ArrayList<String>> areasDeTrabajo) {
		root = new DefaultMutableTreeNode( "Habilidades" );
		pnlArbol.setLayout(new BorderLayout(0, 0));
		JScrollPane spTree = new JScrollPane( );
		spTree.setBounds(10, 35, 180, 495);
		pnlArbol.add( spTree );
		ArbolHabilidades = new JTree();
		modeloArbol = new DefaultTreeModel(root);
		ArbolHabilidades.setModel(modeloArbol);
		this.anyadirHabilidades();
		spTree.setViewportView(ArbolHabilidades);
		
		
	}
	
	private void anyadirHabilidades() {
		int posiGeneral = 0;
		for (String Area : areasDeTrabajo.keySet()) {
			DefaultMutableTreeNode nodoArea = crearNodo(Area,root,posiGeneral);
			posiGeneral++;
			int posiArea = 0;
			for (String Subarea : areasDeTrabajo.get(Area)) {
				crearNodo(Subarea,nodoArea,posiArea);
				posiArea++;
			}
		}
	}
	
	private DefaultMutableTreeNode crearNodo( Object dato, DefaultMutableTreeNode nodoPadre, int posi ) {
		DefaultMutableTreeNode nodo1 = new DefaultMutableTreeNode( dato );
		modeloArbol.insertNodeInto( nodo1, nodoPadre, posi );
		return nodo1;
	}
	
	public void crearMapaAreas() {
		// Crear un diccionario de Ã¡reas de trabajo con subÃ¡reas
        TreeMap<String, ArrayList<String>> areasDeTrabajo = new TreeMap<String, ArrayList<String>>();

        // InformÃ¡tica
        areasDeTrabajo.put("InformÃ¡tica", new ArrayList<>());
        areasDeTrabajo.get("InformÃ¡tica").add("Desarrollo Web");
        areasDeTrabajo.get("InformÃ¡tica").add("Machine Learning");
        areasDeTrabajo.get("InformÃ¡tica").add("Seguridad InformÃ¡tica");
        areasDeTrabajo.get("InformÃ¡tica").add("Desarrollo de Software");
        areasDeTrabajo.get("InformÃ¡tica").add("Base de Datos");

        // Arte y DiseÃ±o
        areasDeTrabajo.put("Arte y DiseÃ±o", new ArrayList<>());
        areasDeTrabajo.get("Arte y DiseÃ±o").add("DiseÃ±o GrÃ¡fico");
        areasDeTrabajo.get("Arte y DiseÃ±o").add("Arquitectura de Interiores");
        areasDeTrabajo.get("Arte y DiseÃ±o").add("AnimaciÃ³n");
        areasDeTrabajo.get("Arte y DiseÃ±o").add("FotografÃ­a");
        areasDeTrabajo.get("Arte y DiseÃ±o").add("DiseÃ±o de Moda");

        // Deporte
        areasDeTrabajo.put("Deporte", new ArrayList<>());
        areasDeTrabajo.get("Deporte").add("Entrenador Personal");
        areasDeTrabajo.get("Deporte").add("Fisioterapia Deportiva");
        areasDeTrabajo.get("Deporte").add("NutriciÃ³n Deportiva");
        areasDeTrabajo.get("Deporte").add("GestiÃ³n Deportiva");
        areasDeTrabajo.get("Deporte").add("Deporte Profesional");

        // PsicologÃ­a
        areasDeTrabajo.put("PsicologÃ­a", new ArrayList<>());
        areasDeTrabajo.get("PsicologÃ­a").add("PsicologÃ­a ClÃ­nica");
        areasDeTrabajo.get("PsicologÃ­a").add("PsicologÃ­a Educativa");
        areasDeTrabajo.get("PsicologÃ­a").add("NeuropsicologÃ­a");
        areasDeTrabajo.get("PsicologÃ­a").add("ConsejerÃ­a PsicolÃ³gica");
        areasDeTrabajo.get("PsicologÃ­a").add("PsicologÃ­a Organizacional");

        // Marketing
        areasDeTrabajo.put("Marketing", new ArrayList<>());
        areasDeTrabajo.get("Marketing").add("Marketing Digital");
        areasDeTrabajo.get("Marketing").add("GestiÃ³n de Marcas");
        areasDeTrabajo.get("Marketing").add("InvestigaciÃ³n de Mercado");
        areasDeTrabajo.get("Marketing").add("Publicidad");
        areasDeTrabajo.get("Marketing").add("Marketing de Contenidos");

        // Finanzas
        areasDeTrabajo.put("Finanzas", new ArrayList<>());
        areasDeTrabajo.get("Finanzas").add("Banca y Finanzas");
        areasDeTrabajo.get("Finanzas").add("Contabilidad");
        areasDeTrabajo.get("Finanzas").add("GestiÃ³n de Inversiones");
        areasDeTrabajo.get("Finanzas").add("Seguros");
        areasDeTrabajo.get("Finanzas").add("Finanzas Corporativas");

        // EducaciÃ³n
        areasDeTrabajo.put("EducaciÃ³n", new ArrayList<>());
        areasDeTrabajo.get("EducaciÃ³n").add("Docencia");
        areasDeTrabajo.get("EducaciÃ³n").add("EducaciÃ³n Especial");
        areasDeTrabajo.get("EducaciÃ³n").add("TecnologÃ­a Educativa");
        areasDeTrabajo.get("EducaciÃ³n").add("OrientaciÃ³n Educativa");
        areasDeTrabajo.get("EducaciÃ³n").add("DirecciÃ³n de Centros Educativos");

        // Medicina
        areasDeTrabajo.put("Medicina", new ArrayList<>());
        areasDeTrabajo.get("Medicina").add("Medicina General");
        areasDeTrabajo.get("Medicina").add("CirugÃ­a");
        areasDeTrabajo.get("Medicina").add("CardiologÃ­a");
        areasDeTrabajo.get("Medicina").add("PediatrÃ­a");
        areasDeTrabajo.get("Medicina").add("PsiquiatrÃ­a");

        // Ciencias de la Salud
        areasDeTrabajo.put("Ciencias de la Salud", new ArrayList<>());
        areasDeTrabajo.get("Ciencias de la Salud").add("EnfermerÃ­a");
        areasDeTrabajo.get("Ciencias de la Salud").add("Fisioterapia");
        areasDeTrabajo.get("Ciencias de la Salud").add("Terapia Ocupacional");
        areasDeTrabajo.get("Ciencias de la Salud").add("NutriciÃ³n");
        areasDeTrabajo.get("Ciencias de la Salud").add("Farmacia");

        // IngenierÃ­a
        areasDeTrabajo.put("IngenierÃ­a", new ArrayList<>());
        areasDeTrabajo.get("IngenierÃ­a").add("IngenierÃ­a Civil");
        areasDeTrabajo.get("IngenierÃ­a").add("IngenierÃ­a ElÃ©ctrica");
        areasDeTrabajo.get("IngenierÃ­a").add("IngenierÃ­a MecÃ¡nica");
        areasDeTrabajo.get("IngenierÃ­a").add("IngenierÃ­a de Sistemas");
        areasDeTrabajo.get("IngenierÃ­a").add("IngenierÃ­a Industrial");

        // Ventas
        areasDeTrabajo.put("Ventas", new ArrayList<>());
        areasDeTrabajo.get("Ventas").add("Ventas Directas");
        areasDeTrabajo.get("Ventas").add("Ventas en LÃ­nea");
        areasDeTrabajo.get("Ventas").add("Ventas B2B");
        areasDeTrabajo.get("Ventas").add("GestiÃ³n de Cuentas");
        areasDeTrabajo.get("Ventas").add("Telemarketing");

        // Servicio al Cliente
        areasDeTrabajo.put("Servicio al Cliente", new ArrayList<>());
        areasDeTrabajo.get("Servicio al Cliente").add("AtenciÃ³n al Cliente");
        areasDeTrabajo.get("Servicio al Cliente").add("Soporte TÃ©cnico");
        areasDeTrabajo.get("Servicio al Cliente").add("GestiÃ³n de Quejas");
        areasDeTrabajo.get("Servicio al Cliente").add("Experiencia del Cliente");
        areasDeTrabajo.get("Servicio al Cliente").add("Call Center");

        // Ciencias Sociales
        areasDeTrabajo.put("Ciencias Sociales", new ArrayList<>());
        areasDeTrabajo.get("Ciencias Sociales").add("Trabajo Social");
        areasDeTrabajo.get("Ciencias Sociales").add("PsicologÃ­a Social");
        areasDeTrabajo.get("Ciencias Sociales").add("AntropologÃ­a");
        areasDeTrabajo.get("Ciencias Sociales").add("SociologÃ­a");
        areasDeTrabajo.get("Ciencias Sociales").add("EducaciÃ³n Social");

        // Ciencias Ambientales
        areasDeTrabajo.put("Ciencias Ambientales", new ArrayList<>());
        areasDeTrabajo.get("Ciencias Ambientales").add("GestiÃ³n Ambiental");
        areasDeTrabajo.get("Ciencias Ambientales").add("ConservaciÃ³n de la Naturaleza");
        areasDeTrabajo.get("Ciencias Ambientales").add("EvaluaciÃ³n de Impacto Ambiental");
        areasDeTrabajo.get("Ciencias Ambientales").add("Recursos Naturales");
        areasDeTrabajo.get("Ciencias Ambientales").add("Sostenibilidad Ambiental");

        // Arquitectura
        areasDeTrabajo.put("Arquitectura", new ArrayList<>());
        areasDeTrabajo.get("Arquitectura").add("DiseÃ±o de Edificios");
        areasDeTrabajo.get("Arquitectura").add("Urbanismo");
        areasDeTrabajo.get("Arquitectura").add("RestauraciÃ³n ArquitectÃ³nica");
        areasDeTrabajo.get("Arquitectura").add("PlanificaciÃ³n Urbana");
        areasDeTrabajo.get("Arquitectura").add("DiseÃ±o de Paisaje");

        // Turismo y Hospitalidad
        areasDeTrabajo.put("Turismo y Hospitalidad", new ArrayList<>());
        areasDeTrabajo.get("Turismo y Hospitalidad").add("GestiÃ³n Hotelera");
        areasDeTrabajo.get("Turismo y Hospitalidad").add("Agencia de Viajes");
        areasDeTrabajo.get("Turismo y Hospitalidad").add("Restaurante y Catering");
        areasDeTrabajo.get("Turismo y Hospitalidad").add("Turismo Sostenible");
        areasDeTrabajo.get("Turismo y Hospitalidad").add("Entretenimiento TurÃ­stico");

        // Agricultura
        areasDeTrabajo.put("Agricultura", new ArrayList<>());
        areasDeTrabajo.get("Agricultura").add("AgronomÃ­a");
        areasDeTrabajo.get("Agricultura").add("Horticultura");
        areasDeTrabajo.get("Agricultura").add("Silvicultura");
        areasDeTrabajo.get("Agricultura").add("Agricultura de PrecisiÃ³n");
        areasDeTrabajo.get("Agricultura").add("Agricultura OrgÃ¡nica");

        // Derecho
        areasDeTrabajo.put("Derecho", new ArrayList<>());
        areasDeTrabajo.get("Derecho").add("Derecho Penal");
        areasDeTrabajo.get("Derecho").add("Derecho Civil");
        areasDeTrabajo.get("Derecho").add("Derecho Laboral");
        areasDeTrabajo.get("Derecho").add("Derecho Comercial");
        areasDeTrabajo.get("Derecho").add("Derecho Internacional");

        // ComunicaciÃ³n
        areasDeTrabajo.put("ComunicaciÃ³n", new ArrayList<>());
        areasDeTrabajo.get("ComunicaciÃ³n").add("Periodismo");
        areasDeTrabajo.get("ComunicaciÃ³n").add("ComunicaciÃ³n Corporativa");
        areasDeTrabajo.get("ComunicaciÃ³n").add("ComunicaciÃ³n Visual");
        areasDeTrabajo.get("ComunicaciÃ³n").add("ComunicaciÃ³n Digital");
        areasDeTrabajo.get("ComunicaciÃ³n").add("Relaciones PÃºblicas");

        // Periodismo
        areasDeTrabajo.put("Periodismo", new ArrayList<>());
        areasDeTrabajo.get("Periodismo").add("Periodismo de InvestigaciÃ³n");
        areasDeTrabajo.get("Periodismo").add("Periodismo Deportivo");
        areasDeTrabajo.get("Periodismo").add("Periodismo PolÃ­tico");
        areasDeTrabajo.get("Periodismo").add("Periodismo de Datos");
        areasDeTrabajo.get("Periodismo").add("Periodismo Multimedia");

        // MÃºsica
        areasDeTrabajo.put("MÃºsica", new ArrayList<>());
        areasDeTrabajo.get("MÃºsica").add("InterpretaciÃ³n Musical");
        areasDeTrabajo.get("MÃºsica").add("ComposiciÃ³n Musical");
        areasDeTrabajo.get("MÃºsica").add("ProducciÃ³n Musical");
        areasDeTrabajo.get("MÃºsica").add("EducaciÃ³n Musical");
        areasDeTrabajo.get("MÃºsica").add("GestiÃ³n de Eventos Musicales");

        // InvestigaciÃ³n y Desarrollo
        areasDeTrabajo.put("InvestigaciÃ³n y Desarrollo", new ArrayList<>());
        areasDeTrabajo.get("InvestigaciÃ³n y Desarrollo").add("InvestigaciÃ³n CientÃ­fica");
        areasDeTrabajo.get("InvestigaciÃ³n y Desarrollo").add("Desarrollo de Producto");
        areasDeTrabajo.get("InvestigaciÃ³n y Desarrollo").add("InvestigaciÃ³n de Mercado");
        areasDeTrabajo.get("InvestigaciÃ³n y Desarrollo").add("Desarrollo TecnolÃ³gico");
        areasDeTrabajo.get("InvestigaciÃ³n y Desarrollo").add("InnovaciÃ³n Empresarial");

        // ConstrucciÃ³n
        areasDeTrabajo.put("ConstrucciÃ³n", new ArrayList<>());
        areasDeTrabajo.get("ConstrucciÃ³n").add("IngenierÃ­a Civil");
        areasDeTrabajo.get("ConstrucciÃ³n").add("Arquitectura");
        areasDeTrabajo.get("ConstrucciÃ³n").add("GestiÃ³n de Proyectos de ConstrucciÃ³n");
        areasDeTrabajo.get("ConstrucciÃ³n").add("DiseÃ±o Estructural");
        areasDeTrabajo.get("ConstrucciÃ³n").add("ConstrucciÃ³n Sostenible");

        // Mantenimiento
        areasDeTrabajo.put("Mantenimiento", new ArrayList<>());
        areasDeTrabajo.get("Mantenimiento").add("Mantenimiento de Edificios");
        areasDeTrabajo.get("Mantenimiento").add("Mantenimiento Industrial");
        areasDeTrabajo.get("Mantenimiento").add("Mantenimiento de VehÃ­culos");
        areasDeTrabajo.get("Mantenimiento").add("Mantenimiento de Equipos ElectrÃ³nicos");
        areasDeTrabajo.get("Mantenimiento").add("Mantenimiento de Jardines");

        // LogÃ­stica
        areasDeTrabajo.put("LogÃ­stica", new ArrayList<>());
        areasDeTrabajo.get("LogÃ­stica").add("GestiÃ³n de la Cadena de Suministro");
        areasDeTrabajo.get("LogÃ­stica").add("LogÃ­stica de Transporte");
        areasDeTrabajo.get("LogÃ­stica").add("GestiÃ³n de Inventarios");
        areasDeTrabajo.get("LogÃ­stica").add("DistribuciÃ³n de MercancÃ­as");
        areasDeTrabajo.get("LogÃ­stica").add("LogÃ­stica de AlmacÃ©n");

        // Transporte
        areasDeTrabajo.put("Transporte", new ArrayList<>());
        areasDeTrabajo.get("Transporte").add("Transporte Terrestre");
        areasDeTrabajo.get("Transporte").add("Transporte MarÃ­timo");
        areasDeTrabajo.get("Transporte").add("Transporte AÃ©reo");
        areasDeTrabajo.get("Transporte").add("Transporte PÃºblico");
        areasDeTrabajo.get("Transporte").add("LogÃ­stica de Transporte");

        // AlimentaciÃ³n y HostelerÃ­a
        areasDeTrabajo.put("AlimentaciÃ³n y HostelerÃ­a", new ArrayList<>());
        areasDeTrabajo.get("AlimentaciÃ³n y HostelerÃ­a").add("RestauraciÃ³n");
        areasDeTrabajo.get("AlimentaciÃ³n y HostelerÃ­a").add("Cocina");
        areasDeTrabajo.get("AlimentaciÃ³n y HostelerÃ­a").add("PastelerÃ­a");
        areasDeTrabajo.get("AlimentaciÃ³n y HostelerÃ­a").add("GestiÃ³n de Restaurantes");
        areasDeTrabajo.get("AlimentaciÃ³n y HostelerÃ­a").add("Hospitalidad");

        // Moda
        areasDeTrabajo.put("Moda", new ArrayList<>());
        areasDeTrabajo.get("Moda").add("DiseÃ±o de Moda");
        areasDeTrabajo.get("Moda").add("ProducciÃ³n Textil");
        areasDeTrabajo.get("Moda").add("GestiÃ³n de Marcas de Moda");
        areasDeTrabajo.get("Moda").add("Estilismo de Moda");
        areasDeTrabajo.get("Moda").add("Venta al por Menor de Moda");

        // Gobierno y PolÃ­tica
        areasDeTrabajo.put("Gobierno y PolÃ­tica", new ArrayList<>());
        areasDeTrabajo.get("Gobierno y PolÃ­tica").add("AdministraciÃ³n PÃºblica");
        areasDeTrabajo.get("Gobierno y PolÃ­tica").add("Diplomacia");
        areasDeTrabajo.get("Gobierno y PolÃ­tica").add("Asuntos Internacionales");
        areasDeTrabajo.get("Gobierno y PolÃ­tica").add("PolÃ­tica PÃºblica");
        areasDeTrabajo.get("Gobierno y PolÃ­tica").add("GestiÃ³n de CampaÃ±as PolÃ­ticas");

        // Organizaciones sin Ã¡nimo de lucro
        areasDeTrabajo.put("Organizaciones sin Ã¡nimo de lucro", new ArrayList<>());
        areasDeTrabajo.get("Organizaciones sin Ã¡nimo de lucro").add("GestiÃ³n de ONGs");
        areasDeTrabajo.get("Organizaciones sin Ã¡nimo de lucro").add("Desarrollo Comunitario");
        areasDeTrabajo.get("Organizaciones sin Ã¡nimo de lucro").add("Trabajo Social");
        areasDeTrabajo.get("Organizaciones sin Ã¡nimo de lucro").add("RecaudaciÃ³n de Fondos");
        areasDeTrabajo.get("Organizaciones sin Ã¡nimo de lucro").add("EducaciÃ³n Social");

        // Relaciones PÃºblicas
        areasDeTrabajo.put("Relaciones PÃºblicas", new ArrayList<>());
        areasDeTrabajo.get("Relaciones PÃºblicas").add("Relaciones con los Medios");
        areasDeTrabajo.get("Relaciones PÃºblicas").add("ComunicaciÃ³n Corporativa");
        areasDeTrabajo.get("Relaciones PÃºblicas").add("Relaciones Gubernamentales");
        areasDeTrabajo.get("Relaciones PÃºblicas").add("GestiÃ³n de Crisis");
        areasDeTrabajo.get("Relaciones PÃºblicas").add("Responsabilidad Social Empresarial");

        // Seguridad
        areasDeTrabajo.put("Seguridad", new ArrayList<>());
        areasDeTrabajo.get("Seguridad").add("Seguridad InformÃ¡tica");
        areasDeTrabajo.get("Seguridad").add("Seguridad FÃ­sica");
        areasDeTrabajo.get("Seguridad").add("Seguridad de Datos");
        areasDeTrabajo.get("Seguridad").add("Seguridad Privada");
        areasDeTrabajo.get("Seguridad").add("Seguridad PÃºblica");

        // EnergÃ­a y Recursos Naturales
        areasDeTrabajo.put("EnergÃ­a y Recursos Naturales", new ArrayList<>());
        areasDeTrabajo.get("EnergÃ­a y Recursos Naturales").add("EnergÃ­a Renovable");
        areasDeTrabajo.get("EnergÃ­a y Recursos Naturales").add("ExtracciÃ³n de Recursos");
        areasDeTrabajo.get("EnergÃ­a y Recursos Naturales").add("GestiÃ³n Ambiental");
        areasDeTrabajo.get("EnergÃ­a y Recursos Naturales").add("PetrÃ³leo y Gas");
        areasDeTrabajo.get("EnergÃ­a y Recursos Naturales").add("MinerÃ­a");

        // Ciencia de Datos
        areasDeTrabajo.put("Ciencia de Datos", new ArrayList<>());
        areasDeTrabajo.get("Ciencia de Datos").add("AnÃ¡lisis de Datos");
        areasDeTrabajo.get("Ciencia de Datos").add("Aprendizaje AutomÃ¡tico");
        areasDeTrabajo.get("Ciencia de Datos").add("Big Data");
        areasDeTrabajo.get("Ciencia de Datos").add("MinerÃ­a de Datos");
        areasDeTrabajo.get("Ciencia de Datos").add("VisualizaciÃ³n de Datos");

        // AstronomÃ­a
        areasDeTrabajo.put("AstronomÃ­a", new ArrayList<>());
        areasDeTrabajo.get("AstronomÃ­a").add("ObservaciÃ³n AstronÃ³mica");
        areasDeTrabajo.get("AstronomÃ­a").add("AstrofÃ­sica");
        areasDeTrabajo.get("AstronomÃ­a").add("CosmologÃ­a");
        areasDeTrabajo.get("AstronomÃ­a").add("AstronomÃ­a TeÃ³rica");
        areasDeTrabajo.get("AstronomÃ­a").add("AstrobiologÃ­a");

        // BiologÃ­a
        areasDeTrabajo.put("BiologÃ­a", new ArrayList<>());
        areasDeTrabajo.get("BiologÃ­a").add("BiologÃ­a Celular");
        areasDeTrabajo.get("BiologÃ­a").add("EcologÃ­a");
        areasDeTrabajo.get("BiologÃ­a").add("GenÃ©tica");
        areasDeTrabajo.get("BiologÃ­a").add("ZoologÃ­a");
        areasDeTrabajo.get("BiologÃ­a").add("BotÃ¡nica");

        // QuÃ­mica
        areasDeTrabajo.put("QuÃ­mica", new ArrayList<>());
        areasDeTrabajo.get("QuÃ­mica").add("QuÃ­mica OrgÃ¡nica");
        areasDeTrabajo.get("QuÃ­mica").add("QuÃ­mica InorgÃ¡nica");
        areasDeTrabajo.get("QuÃ­mica").add("QuÃ­mica AnalÃ­tica");
        areasDeTrabajo.get("QuÃ­mica").add("QuÃ­mica FÃ­sica");

        // MatemÃ¡ticas
        areasDeTrabajo.put("MatemÃ¡ticas", new ArrayList<>());
        areasDeTrabajo.get("MatemÃ¡ticas").add("Ãlgebra");
        areasDeTrabajo.get("MatemÃ¡ticas").add("GeometrÃ­a");
        areasDeTrabajo.get("MatemÃ¡ticas").add("CÃ¡lculo");
        areasDeTrabajo.get("MatemÃ¡ticas").add("EstadÃ­sticas");
        areasDeTrabajo.get("MatemÃ¡ticas").add("TeorÃ­a de NÃºmeros");

        // Farmacia
        areasDeTrabajo.put("Farmacia", new ArrayList<>());
        areasDeTrabajo.get("Farmacia").add("Farmacia ClÃ­nica");
        areasDeTrabajo.get("Farmacia").add("Farmacia Hospitalaria");
        areasDeTrabajo.get("Farmacia").add("Industria FarmacÃ©utica");
        areasDeTrabajo.get("Farmacia").add("Farmacia Comunitaria");
        areasDeTrabajo.get("Farmacia").add("InvestigaciÃ³n FarmacÃ©utica");

        // GeologÃ­a
        areasDeTrabajo.put("GeologÃ­a", new ArrayList<>());
        areasDeTrabajo.get("GeologÃ­a").add("GeologÃ­a del PetrÃ³leo");
        areasDeTrabajo.get("GeologÃ­a").add("GeologÃ­a Ambiental");
        areasDeTrabajo.get("GeologÃ­a").add("GeofÃ­sica");
        areasDeTrabajo.get("GeologÃ­a").add("HidrogeologÃ­a");
        areasDeTrabajo.get("GeologÃ­a").add("GeologÃ­a Planetaria");

        // TraducciÃ³n e InterpretaciÃ³n
        areasDeTrabajo.put("TraducciÃ³n e InterpretaciÃ³n", new ArrayList<>());
        areasDeTrabajo.get("TraducciÃ³n e InterpretaciÃ³n").add("TraducciÃ³n Literaria");
        areasDeTrabajo.get("TraducciÃ³n e InterpretaciÃ³n").add("InterpretaciÃ³n de Conferencias");
        areasDeTrabajo.get("TraducciÃ³n e InterpretaciÃ³n").add("TraducciÃ³n TÃ©cnica");
        areasDeTrabajo.get("TraducciÃ³n e InterpretaciÃ³n").add("LocalizaciÃ³n de Software");
        areasDeTrabajo.get("TraducciÃ³n e InterpretaciÃ³n").add("TraducciÃ³n JurÃ­dica");

        // InvestigaciÃ³n de Mercado
        areasDeTrabajo.put("InvestigaciÃ³n de Mercado", new ArrayList<>());
        areasDeTrabajo.get("InvestigaciÃ³n de Mercado").add("Estudios de Consumidor");
        areasDeTrabajo.get("InvestigaciÃ³n de Mercado").add("InvestigaciÃ³n de OpiniÃ³n PÃºblica");
        areasDeTrabajo.get("InvestigaciÃ³n de Mercado").add("AnÃ¡lisis de Datos de Mercado");
        areasDeTrabajo.get("InvestigaciÃ³n de Mercado").add("EtnografÃ­a de Mercado");
        areasDeTrabajo.get("InvestigaciÃ³n de Mercado").add("InvestigaciÃ³n de Producto");

        // ConsultorÃ­a
        areasDeTrabajo.put("ConsultorÃ­a", new ArrayList<>());
        areasDeTrabajo.get("ConsultorÃ­a").add("ConsultorÃ­a Empresarial");
        areasDeTrabajo.get("ConsultorÃ­a").add("ConsultorÃ­a de GestiÃ³n");
        areasDeTrabajo.get("ConsultorÃ­a").add("ConsultorÃ­a Financiera");
        areasDeTrabajo.get("ConsultorÃ­a").add("ConsultorÃ­a de Recursos Humanos");
        areasDeTrabajo.get("ConsultorÃ­a").add("ConsultorÃ­a en TecnologÃ­a");

        // Artes EscÃ©nicas
        areasDeTrabajo.put("Artes EscÃ©nicas", new ArrayList<>());
        areasDeTrabajo.get("Artes EscÃ©nicas").add("Teatro");
        areasDeTrabajo.get("Artes EscÃ©nicas").add("Danza");
        areasDeTrabajo.get("Artes EscÃ©nicas").add("MÃºsica en Vivo");
        areasDeTrabajo.get("Artes EscÃ©nicas").add("ProducciÃ³n de Eventos");
        areasDeTrabajo.get("Artes EscÃ©nicas").add("DirecciÃ³n EscÃ©nica");

        // Desarrollo Web
        areasDeTrabajo.put("Desarrollo Web", new ArrayList<>());
        areasDeTrabajo.get("Desarrollo Web").add("Desarrollo Front-end");
        areasDeTrabajo.get("Desarrollo Web").add("Desarrollo Back-end");
        areasDeTrabajo.get("Desarrollo Web").add("DiseÃ±o Web");
        areasDeTrabajo.get("Desarrollo Web").add("Desarrollo de Aplicaciones Web");
        areasDeTrabajo.get("Desarrollo Web").add("E-commerce");

        // Redes y Telecomunicaciones
        areasDeTrabajo.put("Redes y Telecomunicaciones", new ArrayList<>());
        areasDeTrabajo.get("Redes y Telecomunicaciones").add("AdministraciÃ³n de Redes");
        areasDeTrabajo.get("Redes y Telecomunicaciones").add("Seguridad en Redes");
        areasDeTrabajo.get("Redes y Telecomunicaciones").add("VoIP");
        areasDeTrabajo.get("Redes y Telecomunicaciones").add("IngenierÃ­a de Telecomunicaciones");
        areasDeTrabajo.get("Redes y Telecomunicaciones").add("Desarrollo de Redes MÃ³viles");

        // ElectrÃ³nica
        areasDeTrabajo.put("ElectrÃ³nica", new ArrayList<>());
        areasDeTrabajo.get("ElectrÃ³nica").add("IngenierÃ­a ElectrÃ³nica");
        areasDeTrabajo.get("ElectrÃ³nica").add("Sistemas Embebidos");
        areasDeTrabajo.get("ElectrÃ³nica").add("AutomatizaciÃ³n Industrial");
        areasDeTrabajo.get("ElectrÃ³nica").add("RobÃ³tica");
        areasDeTrabajo.get("ElectrÃ³nica").add("DiseÃ±o de Circuitos");

        // TecnologÃ­a de la InformaciÃ³n
        areasDeTrabajo.put("TecnologÃ­a de la InformaciÃ³n", new ArrayList<>());
        areasDeTrabajo.get("TecnologÃ­a de la InformaciÃ³n").add("GestiÃ³n de Proyectos TI");
        areasDeTrabajo.get("TecnologÃ­a de la InformaciÃ³n").add("AdministraciÃ³n de Bases de Datos");
        areasDeTrabajo.get("TecnologÃ­a de la InformaciÃ³n").add("Soporte TÃ©cnico");
        areasDeTrabajo.get("TecnologÃ­a de la InformaciÃ³n").add("Desarrollo de Software");
        areasDeTrabajo.get("TecnologÃ­a de la InformaciÃ³n").add("Ciberseguridad");
        
        // Seguros
        areasDeTrabajo.put("Seguros",new ArrayList<>());
        areasDeTrabajo.get("Seguros").add("Agente de Seguros");
        areasDeTrabajo.get("Seguros").add("GestiÃ³n de Riesgos");
        areasDeTrabajo.get("Seguros").add("SuscripciÃ³n de PÃ³lizas");
        areasDeTrabajo.get("Seguros").add("Reclamaciones de Seguros");
        areasDeTrabajo.get("Seguros").add("ActuarÃ­a de Seguros");

        // InvestigaciÃ³n de Operaciones
        areasDeTrabajo.put("InvestigaciÃ³n de Operaciones", new ArrayList<>());
        areasDeTrabajo.get("InvestigaciÃ³n de Operaciones").add("OptimizaciÃ³n");
        areasDeTrabajo.get("InvestigaciÃ³n de Operaciones").add("Modelado MatemÃ¡tico");
        areasDeTrabajo.get("InvestigaciÃ³n de Operaciones").add("AnÃ¡lisis de Decisiones");
        areasDeTrabajo.get("InvestigaciÃ³n de Operaciones").add("LogÃ­stica y Transporte");
        areasDeTrabajo.get("InvestigaciÃ³n de Operaciones").add("GestiÃ³n de la Cadena de Suministro");

        // ArqueologÃ­a
        areasDeTrabajo.put("ArqueologÃ­a", new ArrayList<>());
        areasDeTrabajo.get("ArqueologÃ­a").add("ExcavaciÃ³n ArqueolÃ³gica");
        areasDeTrabajo.get("ArqueologÃ­a").add("RestauraciÃ³n de Artefactos");
        areasDeTrabajo.get("ArqueologÃ­a").add("InvestigaciÃ³n HistÃ³rica");
        areasDeTrabajo.get("ArqueologÃ­a").add("AntropologÃ­a ArqueolÃ³gica");
        areasDeTrabajo.get("ArqueologÃ­a").add("ConservaciÃ³n del Patrimonio");

        // Ciencias PolÃ­ticas
        areasDeTrabajo.put("Ciencias PolÃ­ticas", new ArrayList<>());
        areasDeTrabajo.get("Ciencias PolÃ­ticas").add("Asesor PolÃ­tico");
        areasDeTrabajo.get("Ciencias PolÃ­ticas").add("AnÃ¡lisis PolÃ­tico");
        areasDeTrabajo.get("Ciencias PolÃ­ticas").add("Diplomacia");
        areasDeTrabajo.get("Ciencias PolÃ­ticas").add("GestiÃ³n PÃºblica");
        areasDeTrabajo.get("Ciencias PolÃ­ticas").add("Relaciones Internacionales");

        // Comida y NutriciÃ³n
        areasDeTrabajo.put("Comida y NutriciÃ³n", new ArrayList<>());
        areasDeTrabajo.get("Comida y NutriciÃ³n").add("NutriciÃ³n ClÃ­nica");
        areasDeTrabajo.get("Comida y NutriciÃ³n").add("DietÃ©tica");
        areasDeTrabajo.get("Comida y NutriciÃ³n").add("NutriciÃ³n Deportiva");
        areasDeTrabajo.get("Comida y NutriciÃ³n").add("GestiÃ³n de Alimentos");
        areasDeTrabajo.get("Comida y NutriciÃ³n").add("InvestigaciÃ³n Alimentaria");

        // FotografÃ­a
        areasDeTrabajo.put("FotografÃ­a", new ArrayList<>());
        areasDeTrabajo.get("FotografÃ­a").add("FotografÃ­a de Retrato");
        areasDeTrabajo.get("FotografÃ­a").add("FotografÃ­a de Bodas");
        areasDeTrabajo.get("FotografÃ­a").add("FotografÃ­a de Moda");
        areasDeTrabajo.get("FotografÃ­a").add("FotografÃ­a de Producto");
        areasDeTrabajo.get("FotografÃ­a").add("Fotoperiodismo");

        // DiseÃ±o GrÃ¡fico
        areasDeTrabajo.put("DiseÃ±o GrÃ¡fico", new ArrayList<>());
        areasDeTrabajo.get("DiseÃ±o GrÃ¡fico").add("DiseÃ±o de Marca");
        areasDeTrabajo.get("DiseÃ±o GrÃ¡fico").add("DiseÃ±o Editorial");
        areasDeTrabajo.get("DiseÃ±o GrÃ¡fico").add("DiseÃ±o de Envases");
        areasDeTrabajo.get("DiseÃ±o GrÃ¡fico").add("DiseÃ±o Web");
        areasDeTrabajo.get("DiseÃ±o GrÃ¡fico").add("IlustraciÃ³n");

        // Relaciones Internacionales
        areasDeTrabajo.put("Relaciones Internacionales", new ArrayList<>());
        areasDeTrabajo.get("Relaciones Internacionales").add("Diplomacia");
        areasDeTrabajo.get("Relaciones Internacionales").add("Organismos Internacionales");
        areasDeTrabajo.get("Relaciones Internacionales").add("NegociaciÃ³n Internacional");
        areasDeTrabajo.get("Relaciones Internacionales").add("Derechos Humanos");
        areasDeTrabajo.get("Relaciones Internacionales").add("CooperaciÃ³n Internacional");

        // DiseÃ±o de Interiores
        areasDeTrabajo.put("DiseÃ±o de Interiores", new ArrayList<>());
        areasDeTrabajo.get("DiseÃ±o de Interiores").add("DiseÃ±o Residencial");
        areasDeTrabajo.get("DiseÃ±o de Interiores").add("DiseÃ±o Comercial");
        areasDeTrabajo.get("DiseÃ±o de Interiores").add("DiseÃ±o de Espacios PÃºblicos");
        areasDeTrabajo.get("DiseÃ±o de Interiores").add("DiseÃ±o de Hoteles");
        areasDeTrabajo.get("DiseÃ±o de Interiores").add("DiseÃ±o de Restaurantes");

        // AstronomÃ­a Observacional
        areasDeTrabajo.put("AstronomÃ­a Observacional", new ArrayList<>());
        areasDeTrabajo.get("AstronomÃ­a Observacional").add("ObservaciÃ³n del Cielo Nocturno");
        areasDeTrabajo.get("AstronomÃ­a Observacional").add("AstronomÃ­a Solar");
        areasDeTrabajo.get("AstronomÃ­a Observacional").add("AstronomÃ­a de Radio");
        areasDeTrabajo.get("AstronomÃ­a Observacional").add("AstrofotografÃ­a");
        areasDeTrabajo.get("AstronomÃ­a Observacional").add("Observatorios AstronÃ³micos");

        // Arte Digital
        areasDeTrabajo.put("Arte Digital", new ArrayList<>());
        areasDeTrabajo.get("Arte Digital").add("IlustraciÃ³n Digital");
        areasDeTrabajo.get("Arte Digital").add("AnimaciÃ³n Digital");
        areasDeTrabajo.get("Arte Digital").add("Arte 3D");
        areasDeTrabajo.get("Arte Digital").add("Concept Art");
        areasDeTrabajo.get("Arte Digital").add("DiseÃ±o de Videojuegos");

        // EducaciÃ³n Especial
        areasDeTrabajo.put("EducaciÃ³n Especial", new ArrayList<>());
        areasDeTrabajo.get("EducaciÃ³n Especial").add("EducaciÃ³n Inclusiva");
        areasDeTrabajo.get("EducaciÃ³n Especial").add("AtenciÃ³n a Discapacidades");
        areasDeTrabajo.get("EducaciÃ³n Especial").add("EstimulaciÃ³n Temprana");
        areasDeTrabajo.get("EducaciÃ³n Especial").add("PsicopedagogÃ­a");
        areasDeTrabajo.get("EducaciÃ³n Especial").add("Logopedia");
        areasDeTrabajo.get("EducaciÃ³n Especial").add("Terapia Ocupacional");
        areasDeTrabajo.get("EducaciÃ³n Especial").add("AcompaÃ±amiento TerapÃ©utico");
        areasDeTrabajo.get("EducaciÃ³n Especial").add("EducaciÃ³n para Autismo");

        // OdontologÃ­a
        areasDeTrabajo.put("OdontologÃ­a", new ArrayList<>());
        areasDeTrabajo.get("OdontologÃ­a").add("OdontologÃ­a General");
        areasDeTrabajo.get("OdontologÃ­a").add("Ortodoncia");
        areasDeTrabajo.get("OdontologÃ­a").add("CirugÃ­a Oral y Maxilofacial");
        areasDeTrabajo.get("OdontologÃ­a").add("OdontopediatrÃ­a");
        areasDeTrabajo.get("OdontologÃ­a").add("Periodoncia");

        // Terapia FÃ­sica
        areasDeTrabajo.put("Terapia FÃ­sica", new ArrayList<>());
        areasDeTrabajo.get("Terapia FÃ­sica").add("Fisioterapia");
        areasDeTrabajo.get("Terapia FÃ­sica").add("RehabilitaciÃ³n FÃ­sica");
        areasDeTrabajo.get("Terapia FÃ­sica").add("Terapia Ocupacional");
        areasDeTrabajo.get("Terapia FÃ­sica").add("Terapia de Movimiento");
        areasDeTrabajo.get("Terapia FÃ­sica").add("Terapia de Deportes");

        // PsicologÃ­a
        areasDeTrabajo.put("PsicologÃ­a", new ArrayList<>());
        areasDeTrabajo.get("PsicologÃ­a").add("PsicologÃ­a ClÃ­nica");
        areasDeTrabajo.get("PsicologÃ­a").add("PsicologÃ­a Educativa");
        areasDeTrabajo.get("PsicologÃ­a").add("PsicologÃ­a Organizacional");
        areasDeTrabajo.get("PsicologÃ­a").add("PsicologÃ­a Forense");
        areasDeTrabajo.get("PsicologÃ­a").add("Terapia PsicolÃ³gica");

        // Terapia Ocupacional
        areasDeTrabajo.put("Terapia Ocupacional", new ArrayList<>());
        areasDeTrabajo.get("Terapia Ocupacional").add("RehabilitaciÃ³n Ocupacional");
        areasDeTrabajo.get("Terapia Ocupacional").add("Terapia PediÃ¡trica");
        areasDeTrabajo.get("Terapia Ocupacional").add("Terapia GeriÃ¡trica");
        areasDeTrabajo.get("Terapia Ocupacional").add("Terapia en Salud Mental");
        areasDeTrabajo.get("Terapia Ocupacional").add("Ergoterapia");

        // GerontologÃ­a
        areasDeTrabajo.put("GerontologÃ­a", new ArrayList<>());
        areasDeTrabajo.get("GerontologÃ­a").add("Cuidado de Adultos Mayores");
        areasDeTrabajo.get("GerontologÃ­a").add("GestiÃ³n de Centros de AtenciÃ³n");
        areasDeTrabajo.get("GerontologÃ­a").add("Salud GeriÃ¡trica");
        areasDeTrabajo.get("GerontologÃ­a").add("Calidad de Vida en la Tercera Edad");
        areasDeTrabajo.get("GerontologÃ­a").add("RecreaciÃ³n para Adultos Mayores");

        // Musicoterapia
        areasDeTrabajo.put("Musicoterapia", new ArrayList<>());
        areasDeTrabajo.get("Musicoterapia").add("Terapia de MÃºsica para NiÃ±os");
        areasDeTrabajo.get("Musicoterapia").add("RehabilitaciÃ³n con MÃºsica");
        areasDeTrabajo.get("Musicoterapia").add("Terapia de MÃºsica en Salud Mental");
        areasDeTrabajo.get("Musicoterapia").add("MÃºsica en Hospitales");
        areasDeTrabajo.get("Musicoterapia").add("Musicoterapia en Personas con Autismo");

        // PsicopedagogÃ­a
        areasDeTrabajo.put("PsicopedagogÃ­a", new ArrayList<>());
        areasDeTrabajo.get("PsicopedagogÃ­a").add("OrientaciÃ³n Escolar");
        areasDeTrabajo.get("PsicopedagogÃ­a").add("Dificultades de Aprendizaje");
        areasDeTrabajo.get("PsicopedagogÃ­a").add("AtenciÃ³n a la Diversidad");
        areasDeTrabajo.get("PsicopedagogÃ­a").add("IntervenciÃ³n en Lectura y Escritura");
        areasDeTrabajo.get("PsicopedagogÃ­a").add("EvaluaciÃ³n PsicopedagÃ³gica");
		
        // CriminologÃ­a
        areasDeTrabajo.put("CriminologÃ­a", new ArrayList<>());
        areasDeTrabajo.get("CriminologÃ­a").add("InvestigaciÃ³n Criminal");
        areasDeTrabajo.get("CriminologÃ­a").add("Peritaje Forense");
        areasDeTrabajo.get("CriminologÃ­a").add("PrevenciÃ³n del Crimen");
        areasDeTrabajo.get("CriminologÃ­a").add("PolicÃ­a CientÃ­fica");
        areasDeTrabajo.get("CriminologÃ­a").add("PsicologÃ­a Forense");

        // BiblioteconomÃ­a y DocumentaciÃ³n
        areasDeTrabajo.put("BiblioteconomÃ­a y DocumentaciÃ³n", new ArrayList<>());
        areasDeTrabajo.get("BiblioteconomÃ­a y DocumentaciÃ³n").add("GestiÃ³n de Bibliotecas");
        areasDeTrabajo.get("BiblioteconomÃ­a y DocumentaciÃ³n").add("ArchivÃ­stica");
        areasDeTrabajo.get("BiblioteconomÃ­a y DocumentaciÃ³n").add("Bibliotecas Digitales");
        areasDeTrabajo.get("BiblioteconomÃ­a y DocumentaciÃ³n").add("DocumentaciÃ³n Empresarial");
        areasDeTrabajo.get("BiblioteconomÃ­a y DocumentaciÃ³n").add("Bibliotecas Escolares");

        // TeologÃ­a
        areasDeTrabajo.put("TeologÃ­a", new ArrayList<>());
        areasDeTrabajo.get("TeologÃ­a").add("Ministerio Religioso");
        areasDeTrabajo.get("TeologÃ­a").add("Estudios BÃ­blicos");
        areasDeTrabajo.get("TeologÃ­a").add("Ãtica Religiosa");
        areasDeTrabajo.get("TeologÃ­a").add("TeologÃ­a Pastoral");
        areasDeTrabajo.get("TeologÃ­a").add("Historia de las Religiones");

        // FilosofÃ­a
        areasDeTrabajo.put("FilosofÃ­a", new ArrayList<>());
        areasDeTrabajo.get("FilosofÃ­a").add("Docencia de FilosofÃ­a");
        areasDeTrabajo.get("FilosofÃ­a").add("Ãtica FilosÃ³fica");
        areasDeTrabajo.get("FilosofÃ­a").add("FilosofÃ­a PolÃ­tica");
        areasDeTrabajo.get("FilosofÃ­a").add("FilosofÃ­a de la Mente");
        areasDeTrabajo.get("FilosofÃ­a").add("FilosofÃ­a de la Ciencia");
        
        this.areasDeTrabajo=areasDeTrabajo;
	}
	

}
